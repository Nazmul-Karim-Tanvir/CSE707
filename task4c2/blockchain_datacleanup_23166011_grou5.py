# -*- coding: utf-8 -*-
"""blockchain_datacleanup_23166011_grou5

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1df7LBtQo0yAe5motZvM0Dp_M6kHDN-Bg
"""

# Mount Google Drive
from google.colab import drive
drive.mount('/content/drive')

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

# Paths to datasets in Google Drive
creditcard_path = '/content/drive/My Drive/MSC-Summer-2024/CSE707/Project/Coding/creditcard.csv'  # Update with your path
paysim_path = '/content/drive/My Drive/MSC-Summer-2024/CSE707/Project/Coding/paysim1.csv'  # Update with your path
kaggle_creditcard_path = '/content/drive/My Drive/MSC-Summer-2024/CSE707/Project/Coding/frb.csv'  # Update with your path

# Try-except blocks to load the datasets and handle any potential errors
try:
    df_creditcard = pd.read_csv(creditcard_path, encoding='utf-8')
    print("Credit Card Fraud Detection Dataset Loaded Successfully")
except Exception as e:
    print(f"Error loading Credit Card Fraud Detection dataset: {e}")

try:
    df_paysim = pd.read_csv(paysim_path, encoding='utf-8')
    print("Paysim Dataset Loaded Successfully")
except Exception as e:
    print(f"Error loading Paysim dataset: {e}")

try:
    df_kaggle_creditcard = pd.read_csv(kaggle_creditcard_path, encoding='utf-8')
    print("Another Kaggle Credit Card Fraud Dataset Loaded Successfully")
except Exception as e:
    print(f"Error loading Kaggle Credit Card Fraud dataset: {e}")

# Function to display before and after preprocessing
def display_data_before_after(df, title):
    print(f"--- {title} ---")
    print("Before Preprocessing:")
    print(df.head(), "\n")

    # Dynamically determine fraud column
    if 'Class' in df.columns:
        fraud_column = 'Class'
    elif 'isFraud' in df.columns:
        fraud_column = 'isFraud'
    elif 'default.payment.next.month' in df.columns:  # Check for the actual column name in your dataset
        fraud_column = 'default.payment.next.month'
    else:
        raise ValueError("Fraud column not found in the dataset")

    # Display class distribution before preprocessing
    plt.figure(figsize=(8, 5))
    sns.countplot(x=fraud_column, data=df)
    plt.title(f'Class Distribution Before Preprocessing: {title}')
    plt.xlabel(fraud_column)
    plt.ylabel('Count')
    plt.show()

    # Preprocessing Steps
    df.drop_duplicates(inplace=True)  # Remove duplicates

    # Fill missing values (for numerical columns)
    for col in df.select_dtypes(include=['float64', 'int64']).columns:
        df[col].fillna(df[col].median(), inplace=True)

    # Check for PAY_AMT columns and normalize if present
    pay_amt_columns = [f'PAY_AMT{i}' for i in range(4, 7)]
    for col in pay_amt_columns:
        if col in df.columns:
            df[f'Normalized_{col}'] = (df[col] - df[col].mean()) / df[col].std()

    # Prepare relevant columns for display
    relevant_columns = []
    if 'PAY_AMT4' in df.columns:
        relevant_columns.append('PAY_AMT4')
    if 'PAY_AMT5' in df.columns:
        relevant_columns.append('PAY_AMT5')
    if 'PAY_AMT6' in df.columns:
        relevant_columns.append('PAY_AMT6')
    relevant_columns.append(fraud_column)  # Add the fraud column

    df = df[relevant_columns]

    # Rename columns for consistency
    df.columns = [col if col != fraud_column else 'IsFraud' for col in df.columns]

    print("After Preprocessing:")
    print(df.head(), "\n")

    # Display class distribution after preprocessing
    plt.figure(figsize=(8, 5))
    sns.countplot(x='IsFraud', data=df)
    plt.title(f'Class Distribution After Preprocessing: {title}')
    plt.xlabel('Class (0: Not Fraud, 1: Fraud)')
    plt.ylabel('Count')
    plt.show()

# Display and preprocess each dataset
if 'df_creditcard' in locals():
    display_data_before_after(df_creditcard, "Credit Card Fraud Detection Dataset")

if 'df_paysim' in locals():
    display_data_before_after(df_paysim, "Paysim Dataset")

if 'df_kaggle_creditcard' in locals():
    display_data_before_after(df_kaggle_creditcard, "Another Kaggle Credit Card Fraud Dataset")